<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.QualityInspectionTemplateMapper">

    <resultMap type="QualityInspectionTemplate" id="QualityInspectionTemplateResult">
        <result property="templateId" column="template_id"/>
        <result property="templateName" column="template_name"/>
        <result property="qualityId" column="quality_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="userId" column="user_id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <association property="qualityInspection" column="quality_id" javaType="QualityInspection"
                     select="selectQualityInspection"/>
    </resultMap>

    <resultMap type="QualityInspectionTemplateVo" id="QualityInspectionTemplateVoResult">
        <result property="templateName" column="template_name"/>
        <collection property="qualityInspectionList" column="template_name" javaType="java.util.List"
                    ofType="QualityInspection"
                    select="selectQualityInspectionList"/>
    </resultMap>

    <sql id="selectQualityInspectionTemplateVo">
        select template_id,
               template_name,
               quality_id,
               dept_id,
               user_id,
               create_by,
               create_time,
               update_by,
               update_time
        from quality_inspection_template
    </sql>

    <select id="selectQualityInspectionTemplateList" parameterType="QualityInspectionTemplate"
            resultMap="QualityInspectionTemplateResult">
        <include refid="selectQualityInspectionTemplateVo"/>
        <where>
            <if test="templateName != null  and templateName != ''">and template_name like concat('%', #{templateName},
                '%')
            </if>
            <if test="qualityId != null ">and quality_id = #{qualityId}</if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="selectQualityInspectionTemplateByTemplateId" parameterType="Long"
            resultMap="QualityInspectionTemplateResult">
        <include refid="selectQualityInspectionTemplateVo"/>
        where template_id = #{templateId}
    </select>

    <insert id="insertQualityInspectionTemplate" parameterType="QualityInspectionTemplate" useGeneratedKeys="true"
            keyProperty="templateId">
        insert into quality_inspection_template
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="templateName != null">template_name,</if>
            <if test="qualityId != null">quality_id,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="templateName != null">#{templateName},</if>
            <if test="qualityId != null">#{qualityId},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateQualityInspectionTemplate" parameterType="QualityInspectionTemplate">
        update quality_inspection_template
        <trim prefix="SET" suffixOverrides=",">
            <if test="templateName != null">template_name = #{templateName},</if>
            <if test="qualityId != null">quality_id = #{qualityId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where template_id = #{templateId}
    </update>

    <delete id="deleteQualityInspectionTemplateByTemplateId" parameterType="Long">
        delete
        from quality_inspection_template
        where template_id = #{templateId}
    </delete>

    <delete id="deleteQualityInspectionTemplateByTemplateIds" parameterType="String">
        delete from quality_inspection_template where template_id in
        <foreach item="templateId" collection="array" open="(" separator="," close=")">
            #{templateId}
        </foreach>
    </delete>

    <select id="selectQualityInspection" resultType="QualityInspection">
        SELECT *
        FROM quality_inspection
        WHERE id = #{qualityId}
    </select>

    <select id="selectQualityInspectionList" resultType="QualityInspection">
        SELECT a.*
        FROM quality_inspection a
                 left JOIN quality_inspection_template t on t.quality_id = a.id
        WHERE t.template_name = #{templateName}
    </select>

    <select id="selectTemplateList" parameterType="QualityInspectionTemplate"
            resultMap="QualityInspectionTemplateVoResult">
        select
        dd.dict_type,
        dd.dict_label as template_name
        from sys_dict_data dd
        <where>
            and dd.dict_type = 'project_inspection'
            <if test="templateName != null  and templateName != ''">and dd.dict_label like concat('%', #{templateName},
                '%')
            </if>
        </where>
    </select>

    <select id="getTemplateByTemplateName" resultType="QualityInspectionTemplate">
        select dd.dict_label as template_name
        from sys_dict_data dd
        where dd.dict_type = 'project_inspection'
          and dd.dict_label = #{templateName}
    </select>

</mapper>